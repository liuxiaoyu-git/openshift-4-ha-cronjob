#!/usr/bin/env ansible-playbook
- hosts: localhost
  gather_facts: false
  vars:
    this_cluster_api_url: "{{ lookup('env', 'THIS_CLUSTER_API_URL') }}"
    # Array of cluster api urls
    clusters_array: "{{ lookup('env', 'CLUSTER_API_URL_LIST').split(',') + [lookup('env', 'THIS_CLUSTER_API_URL')] }}"
    # Whether the application is deployed via Deployment of DeploymentConfig object
    deployment_or_deploymentconfig: "{{ lookup('env', 'DEPLOYMENT_OR_DEPLOYMENTCONFIG') }}"
    # The name of the deployment / deploymentconfig object to scale
    deployment_name: "{{ lookup('env', 'DC_NAME') }}"
    # The namespace the application resides in
    project_name: "{{ lookup('env', 'PROJECT_NAME') }}"
    # The desired number of replicas running in each cluster
    replicas_per_cluster: "{{ lookup('env', 'REPLICAS_PER_CLUSTER') }}"

  tasks:
  - name: Check alternate cluster statuses
    uri:
      url: "{{ item }}/healthz"
      validate_certs: no
      return_content: yes
    loop: "{{ clusters_array }}"
    register: get_cluster_statuses

  - name: Calculate cluster counts
    set_fact:
      total_clusters: "{{ clusters_array | count }}"
      healthy_clusters: "{{ get_cluster_statuses.results
                          | map(attribute='content')
                          | select('match', '^ok$')
                          | list
                          | count }}"
      unhealthy_clusters: "{{ get_cluster_statuses.results
                          | map(attribute='content')
                          | select('match', '^!ok$')
                          | list
                          | count }}"

  - debug:
      var: (total_clusters | int * replicas_per_cluster | int) / healthy_clusters | int
        | round(0, 'ceil')

  - name: Calculated adjusted replicas per cluster
    set_fact:
      adjusted_replicas_per_cluster: "{{ (total_clusters | int * replicas_per_cluster | int) / healthy_clusters | int
                                        | round(0, 'ceil')
                                        | int }}"

  - name: Log in to this cluster
    shell: "/usr/bin/oc
            login
            --insecure-skip-tls-verify
            --token={{ 'tests' }}
            --server={{ this_cluster_api_url }}"
    changed_when: false

  - name: Get current application scale
    shell: "/usr/bin/oc
            get
            {{ deployment_or_deploymentconfig }}/{{ deployment_name }}
            -o yaml
            -n {{ project_name }}"
    changed_when: false
    register: oc_get_dc

  - name: Print job analysis details
    debug:
      msg:
      - "Healthy Clusters: {{ healthy_clusters }}"
      - "Unhealthy Clusters: {{ unhealthy_clusters }}"
      - "Required application replicas in this cluster: {{ adjusted_replicas_per_cluster | int }}"

  - name: Scale application based on cluster health
    shell: "/usr/bin/oc
            scale
            {{ deployment_or_deploymentconfig }}/{{ deployment_name }}
            --replicas {{ adjusted_replicas_per_cluster }}
            -n {{ project_name }}"
    when: (oc_get_dc.stdout | from_yaml).status.replicas | int != adjusted_replicas_per_cluster | int